# Generated by Django 5.2.4 on 2025-08-10 04:52

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core_p', '0013_alter_product_productdescription_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Human readable name for admin', max_length=180)),
                ('code', models.CharField(blank=True, help_text='Optional coupon code. Leave blank for automatic discounts (no code required).', max_length=64, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('discount_type', models.CharField(choices=[('percent', 'Percentage'), ('fixed', 'Fixed amount')], default='percent', help_text='Percentage will be applied as price * (value / 100). Fixed amount subtracts value from price.', max_length=10)),
                ('value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('start_date', models.DateTimeField(blank=True, help_text='If blank, discount is active immediately.', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='If blank, discount does not expire.', null=True)),
                ('active', models.BooleanField(default=True, help_text='Master toggle for the discount.')),
                ('combinable', models.BooleanField(default=False, help_text='If False, this discount cannot be stacked with other discounts in the same order.')),
                ('minimum_order_value', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum cart / item value required to apply this discount (optional).', max_digits=12, null=True)),
                ('usage_limit', models.PositiveIntegerField(blank=True, help_text='Maximum number of times this discount may be used across all users. Null = unlimited.', null=True)),
                ('usage_limit_per_user', models.PositiveIntegerField(blank=True, help_text='Maximum number of times a single user may use this discount. Null = unlimited.', null=True)),
                ('priority', models.IntegerField(default=0, help_text='Higher priority discounts are applied first.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, help_text='Product categories this discount applies to.', related_name='discounts', to='core_p.productcategory')),
                ('collections', models.ManyToManyField(blank=True, help_text='Product collections this discount applies to.', related_name='discounts', to='core_p.productcollection')),
                ('products', models.ManyToManyField(blank=True, help_text='Products this discount explicitly applies to.', related_name='discounts', to='core_p.product')),
                ('variants', models.ManyToManyField(blank=True, help_text='Optional: apply discount only to specific product variants.', related_name='discounts', to='core_p.productvariant')),
            ],
            options={
                'ordering': ('-priority', 'name'),
            },
        ),
        migrations.CreateModel(
            name='DiscountUsage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_reference', models.CharField(blank=True, help_text='Optional: store order id/invoice reference for audit.', max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Monetary amount discounted in this usage (for audit).', max_digits=12, null=True)),
                ('discount', models.ForeignKey(help_text='Discount that was used.', on_delete=django.db.models.deletion.CASCADE, related_name='usage', to='core_p.discount')),
                ('used_by', models.ForeignKey(blank=True, help_text='User who used it.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
            },
        ),
        migrations.AddIndex(
            model_name='discount',
            index=models.Index(fields=['code'], name='core_p_disc_code_0b41df_idx'),
        ),
        migrations.AddIndex(
            model_name='discount',
            index=models.Index(fields=['active', 'start_date', 'end_date'], name='core_p_disc_active_3b1f2b_idx'),
        ),
        migrations.AddIndex(
            model_name='discountusage',
            index=models.Index(fields=['discount'], name='core_p_disc_discoun_253583_idx'),
        ),
        migrations.AddIndex(
            model_name='discountusage',
            index=models.Index(fields=['used_by'], name='core_p_disc_used_by_f4b82d_idx'),
        ),
    ]
